This is a pre-alpha release of a Java SAMP kit.

It currently contains the following pure Java components:

  - a SAMP hub, suitable for standalone or embedded use
  - a SAMP client toolkit, to facilitate use of SAMP in java apps
  - some GUI components suitable for use with the above.

It has one dependency, the Apache XML-RPC library, supplied.

I plan to add in the future:

  - unit tests for the package itself
  - a hub test suite
  - documentation
  - some command-line utilities for sending SAMP messages

It currently has (almost) no javadoc comments, other comments, or other
documentation beyond this file, and it has not been properly tested.
You can get a fair idea of what's what by looking at the javadocs and
maybe source code though.
No guarantees are made about its quality in its current state.  
However, if you see something that looks like it might be a bug 
I haven't spotted, please let me know.

When it is released properly it will be well documented, tested, and
the API may change from its current appearance.  Normally I wouldn't
make public code at this level of development, but since other people
are playing around with SAMP implementations in other languages it
may be of use.

Here are some useful things you can do with the code as it stands:

   org.astrogrid.samp.hub.HubRunner 
       main() method Runs a hub.  Logging information is output through 
       the java.util.logging system.  With the "-gui" flag gives you
       a panel which shows the hub's current state including 
       registered applications, metadata, subscriptions etc.

   org.astrogrid.samp.gui.HubMonitor
       main() method runs a client which makes use of the client toolkit 
       to monitor the hub.  Shows a panel like that of the HubRunner 
       -gui which shows the hub's state as monitored by the client.  
       This will register/unregister with hubs as they appear/disappear
       or by user request (using the button at the bottom) as required.

   org.astrogrid.samp.client.HubConnector
       This is the main point of entry for clients wishing to use the
       toolkit.  It can keep track of hubs which may appear or
       disappear over the client's lifetime, and provides various hooks
       for use with GUIs.  See the HubMonitor source code for an
       example of use.  For lower level use (just connecting to a single
       hub) just use the HubConnection object returned by 
       HubConnector.createConnection().

   org.astrogrid.samp.client.HubConnection
       Lower level interface for 
      

Mark Taylor
m.b.taylor@bristol.ac.uk
